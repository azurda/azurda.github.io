<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>azurda</title>
    <link>https://azurda.github.io/</link>
    <description>Recent content on azurda</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 22 Jan 2021 10:18:48 +0200</lastBuildDate>
    
	<atom:link href="https://azurda.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>SearchPathW hook &#43; example code.</title>
      <link>https://azurda.github.io/posts/searchpathw/</link>
      <pubDate>Fri, 22 Jan 2021 10:18:48 +0200</pubDate>
      
      <guid>https://azurda.github.io/posts/searchpathw/</guid>
      <description>Note: This is a quick blog post to answer the issue of an user from the FRIDA IRC / telegram channel.
In this case what we want to do is to hook the SearchPathW WINAPI:
DWORD SearchPathW( LPCWSTR lpPath, LPCWSTR lpFileName, LPCWSTR lpExtension, DWORD nBufferLength, LPWSTR lpBuffer, LPWSTR *lpFilePart ); In this case, we want to obtain the most meaningul argument which is in this case the second one, lpFileName. It is possible to extract information from the remaining fields if wanted.</description>
    </item>
    
    <item>
      <title>Frida Tools</title>
      <link>https://azurda.github.io/posts/frida-tools/</link>
      <pubDate>Tue, 22 Dec 2020 23:10:36 +0200</pubDate>
      
      <guid>https://azurda.github.io/posts/frida-tools/</guid>
      <description>The frida-tools package offers some CLI tools that we can use for quick binary instrumentation. We can install them by simply running the following command:
pip install frida-tools
We are going to take a look at the most important tools: frida CLI and frida-trace
frida-trace This tool alllows us to instrument processes or apps without the need of writing an instrumentation tool. This tool&amp;rsquo;s funtionality is based on the Interceptor API:</description>
    </item>
    
    <item>
      <title>Reading structs with Frida</title>
      <link>https://azurda.github.io/posts/structs/</link>
      <pubDate>Tue, 15 Dec 2020 02:18:48 +0200</pubDate>
      
      <guid>https://azurda.github.io/posts/structs/</guid>
      <description>We are able to read function arguments with FRIDA using the args:NativePointer[] array. However, this is not possible with arguments that are not simple types such as structs.
Where can we find structs? We can find structs in the Unix time libraries for example, or more importantly in Windows&amp;rsquo;s APICALLs such as the ones in NTDLL.
Stages:
 Understanding and reading a user-controlled struct. Reading a UNIX syscall structure. Reading a Windows NTDLL structure.</description>
    </item>
    
  </channel>
</rss>